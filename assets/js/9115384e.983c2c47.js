"use strict";(self.webpackChunkheac_framework_docs=self.webpackChunkheac_framework_docs||[]).push([[8564],{2936:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var s=a(7624),o=a(2172);const n={},i="Smooth Value",l={id:"HF-Stats/Display/Smooth-Value",title:"Smooth Value",description:"A Smooth Value is a UObject subclass with a value that smoothly follows the Target Value of a Stat.",source:"@site/docs/01-HF-Stats/06-Display/03-Smooth-Value.md",sourceDirName:"01-HF-Stats/06-Display",slug:"/HF-Stats/Display/Smooth-Value",permalink:"/docs/HF-Stats/Display/Smooth-Value",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"hfstatsSidebar",previous:{title:"ReactiveProgressBar_Stat",permalink:"/docs/HF-Stats/Display/Stat-Widgets/ReactiveProgressBar_Stat"},next:{title:"Value Display Format",permalink:"/docs/HF-Stats/Display/Value-Display-Format"}},r={},c=[{value:"Create a Smooth Value",id:"create-a-smooth-value",level:2},{value:"Details Panel",id:"details-panel",level:2},{value:"Behavior",id:"behavior",level:2}];function h(e){const t={br:"br",em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,o.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"smooth-value",children:"Smooth Value"}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.strong,{children:"Smooth Value"})," is a UObject subclass with a value that smoothly follows the ",(0,s.jsx)(t.strong,{children:"Target Value of a Stat"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"create-a-smooth-value",children:"Create a Smooth Value"}),"\n",(0,s.jsx)(t.p,{children:"You can create a blueprint class from the SmoothValue class."}),"\n",(0,s.jsx)("img",{src:"/img/doc/HF-Stats/CreateSmoothValue.jpg",width:"500"}),"\n",(0,s.jsx)(t.h2,{id:"details-panel",children:"Details Panel"}),"\n",(0,s.jsx)(t.p,{children:"In its details panel, you'll be able to fill its informations."}),"\n",(0,s.jsx)("img",{src:"/img/doc/HF-Stats/SmoothValueDetails.jpg"}),"\n",(0,s.jsx)(t.h2,{id:"behavior",children:"Behavior"}),"\n",(0,s.jsxs)(t.p,{children:["When its ",(0,s.jsx)(t.strong,{children:"Target Value"})," is ",(0,s.jsx)(t.strong,{children:"modified"}),", the ",(0,s.jsx)(t.strong,{children:"Smooth Value"})," will wait before starting to catch up.",(0,s.jsx)(t.br,{}),"\n","If no other modification is done during the\r\n",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.strong,{children:"Time Before Catching Up"})})," or if this value is null or below 0, it will start to catch up using\r\nthe ",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.strong,{children:"Catch Up Speed"})})," and ",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.strong,{children:"Tick Rate"})}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Finally, when it reaches the Target Value, it will reset to its normal state and wait for a new modification."}),"\n",(0,s.jsxs)(t.p,{children:["You can also modify the way it catches up to the Target Value on each tick by overriding ",(0,s.jsx)("span",{class:"function",children:"GetSmoothValue()"}),"."]}),"\n",(0,s.jsx)("img",{src:"/img/doc/HF-Stats/OverrideGetSmoothValue.jpg"})]})}function d(e={}){const{wrapper:t}={...(0,o.M)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},2172:(e,t,a)=>{a.d(t,{I:()=>l,M:()=>i});var s=a(1504);const o={},n=s.createContext(o);function i(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);