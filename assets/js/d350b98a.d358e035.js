"use strict";(self.webpackChunkheac_framework_docs=self.webpackChunkheac_framework_docs||[]).push([[1020],{5568:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var s=n(7624),a=n(2172);const i={},r="String Operation",l={id:"HF-Stats/StatsComponent/String-Operation",title:"String Operation",description:"A String Operation (or Stat Operation) is a string type that allows you to type in an expression with your Stats and return a result (a value).",source:"@site/docs/01-HF-Stats/03-StatsComponent/08-String-Operation.md",sourceDirName:"01-HF-Stats/03-StatsComponent",slug:"/HF-Stats/StatsComponent/String-Operation",permalink:"/docs/HF-Stats/StatsComponent/String-Operation",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"hfstatsSidebar",previous:{title:"Delegates",permalink:"/docs/HF-Stats/StatsComponent/Delegates"},next:{title:"Value Influence",permalink:"/docs/HF-Stats/StatsComponent/Value-Influence"}},o={},u=[{value:"Expressions",id:"expressions",level:2},{value:"Operators",id:"operators",level:3},{value:"Stats",id:"stats",level:3},{value:"Target Values",id:"target-values",level:4},{value:"Default Values",id:"default-values",level:4},{value:"Custom Values",id:"custom-values",level:3},{value:"Add Custom Values",id:"add-custom-values",level:4},{value:"Use Custom Values",id:"use-custom-values",level:4},{value:"Modify a Custom Value",id:"modify-a-custom-value",level:4},{value:"Curve",id:"curve",level:3}];function d(e){const t={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,a.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"string-operation",children:"String Operation"}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.strong,{children:"String Operation"})," (or ",(0,s.jsx)(t.strong,{children:"Stat Operation"}),") is a string type that allows you to type in an expression with your Stats and return a result (a value)."]}),"\n",(0,s.jsx)(t.admonition,{title:"Example",type:"note",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"({Agility} + {Strength}) + 2"}),(0,s.jsx)(t.br,{}),"\n","Will return the sum of the Final Value of Agility, Strength and 2."]})}),"\n",(0,s.jsxs)(t.p,{children:["It is used in ",(0,s.jsx)(t.strong,{children:"Value Influences"})," or can be used directly with ",(0,s.jsx)("span",{class:"function",children:"MakeStringOperation()"}),"."]}),"\n",(0,s.jsx)("img",{src:"/img/doc/HF-Stats/MakeStringOperation.jpg"}),"\n",(0,s.jsx)(t.h2,{id:"expressions",children:"Expressions"}),"\n",(0,s.jsx)(t.h3,{id:"operators",children:"Operators"}),"\n",(0,s.jsxs)(t.p,{children:["You can use the following operators:",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.code,{children:"( ) + - * / % sqrt ^"})]}),"\n",(0,s.jsx)(t.admonition,{title:"Example",type:"note",children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"sqrt(3 - 1) / (3^4 + (5 * 2.5))"})})}),"\n",(0,s.jsx)(t.h3,{id:"stats",children:"Stats"}),"\n",(0,s.jsxs)(t.p,{children:["You can use Stats in the operation by encapsulating their IDs in curly brackets ",(0,s.jsx)(t.code,{children:"{StatID}"}),"."]}),"\n",(0,s.jsx)(t.admonition,{title:"Example",type:"note",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"{Strength}"}),(0,s.jsx)(t.br,{}),"\n","Will return the Final Value of Strength."]})}),"\n",(0,s.jsx)(t.h4,{id:"target-values",children:"Target Values"}),"\n",(0,s.jsxs)(t.p,{children:["If you don't want to target the Final Value of a Stat, but rather its Integer or Alternative Value, you can use a dot ",(0,s.jsx)(t.code,{children:".targetvalue"}),"."]}),"\n",(0,s.jsx)(t.admonition,{title:"Example",type:"note",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"{Level.int}"}),(0,s.jsx)(t.br,{}),"\n","Will return the Integer Value of the Level Stat.",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.code,{children:"{Strength.alt0}"}),(0,s.jsx)(t.br,{}),"\n","Will return the Alternative Value at index 0 of Strength.",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.code,{children:"{Strength.alt1}"}),(0,s.jsx)(t.br,{}),"\n","Will return the Alternative Value at index 1 of Strength.",(0,s.jsx)(t.br,{}),"\n","etc."]})}),"\n",(0,s.jsx)(t.h4,{id:"default-values",children:"Default Values"}),"\n",(0,s.jsxs)(t.p,{children:["If there's a chance that the Complex Stat might not exist (if you intend to add or remove Stats during gameplay), you can add a default value with\r\nparenthesis ",(0,s.jsx)(t.code,{children:"(DefaultValue)"}),". Without any Default Value provided, the value of a Stat that doesn't exist will be 0.",(0,s.jsx)(t.br,{}),"\n","It can be useful if you intend to use some Stats as multipliers or dividers in your Value Influence."]}),"\n",(0,s.jsxs)(t.admonition,{title:"Example",type:"note",children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"{Agility(1)} * 2"}),(0,s.jsx)(t.br,{}),"\n","Will return ",(0,s.jsx)(t.code,{children:"1 * 2"})," if Agility doesn't exist."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"2 / {Agility.int(1)}"}),(0,s.jsx)(t.br,{}),"\n","Will return ",(0,s.jsx)(t.code,{children:"2 / 1"})," if Agility doesn't exist."]})]}),"\n",(0,s.jsx)(t.h3,{id:"custom-values",children:"Custom Values"}),"\n",(0,s.jsx)(t.p,{children:"A Custom Value is a value tied to an ID. You can add some in your String Operation, and will be able to modify them later on."}),"\n",(0,s.jsx)(t.h4,{id:"add-custom-values",children:"Add Custom Values"}),"\n",(0,s.jsx)(t.p,{children:"Add a Custom Values by adding an element to the Custom Values array."}),"\n",(0,s.jsx)("img",{src:"/img/doc/HF-Stats/CustomValues.jpg"}),"\n",(0,s.jsx)(t.h4,{id:"use-custom-values",children:"Use Custom Values"}),"\n",(0,s.jsxs)(t.p,{children:["For Custom Values, you'll need to use Square Brackets: ",(0,s.jsx)(t.code,{children:"[MyCustomValue]"}),"."]}),"\n",(0,s.jsxs)(t.admonition,{title:"Example",type:"note",children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"2 * [PerkRank]"}),(0,s.jsx)(t.br,{}),"\n",'Will return the product of 2 and the value associated to the ID "PerkRank".']}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"[PerkRank] + {Agility}"}),(0,s.jsx)(t.br,{}),"\n",'Will return the sum of "PerkRank" and the Final Value of "Agility".']})]}),"\n",(0,s.jsx)(t.h4,{id:"modify-a-custom-value",children:"Modify a Custom Value"}),"\n",(0,s.jsxs)(t.p,{children:["You can modify a Custom Value with ",(0,s.jsx)("span",{class:"function",children:"UpdateValueInfluenceCustomValue()"}),"."]}),"\n",(0,s.jsx)("img",{src:"/img/doc/HF-Stats/UpdateValueInfluenceCustomValue.jpg"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:'This function will update all Custom Values "MySecondCustomValue" under "MyInfluenceID" with the value 7.'})}),"\n",(0,s.jsx)(t.h3,{id:"curve",children:"Curve"}),"\n",(0,s.jsx)(t.p,{children:"In situations where the influence would be hard to translate into an operation, you can use a Curve to set your key values\r\ndirectly in the curve editor."}),"\n",(0,s.jsx)(t.p,{children:"The result of the operation will be used as the X axis, and return the value of the Y axis."}),"\n",(0,s.jsxs)(t.admonition,{title:"Example",type:"note",children:[(0,s.jsxs)(t.p,{children:["I want to manually set the threshold points on how my Agility will affect my Attack Power.",(0,s.jsx)(t.br,{}),"\n","I can create my curve and add some key points."]}),(0,s.jsx)("img",{src:"/img/doc/HF-Stats/StringOperationCurve.jpg"}),(0,s.jsx)(t.p,{children:'In my Value Influence, I can simply capture "Agility" and use my curve.'}),(0,s.jsx)("img",{src:"/img/doc/HF-Stats/StringOperationCurveExample.jpg"})]})]})}function c(e={}){const{wrapper:t}={...(0,a.M)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2172:(e,t,n)=>{n.d(t,{I:()=>l,M:()=>r});var s=n(1504);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);