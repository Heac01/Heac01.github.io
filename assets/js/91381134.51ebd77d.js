"use strict";(self.webpackChunkheac_framework_docs=self.webpackChunkheac_framework_docs||[]).push([[7144],{6196:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=t(7624),r=t(2172);const i={},s="Shared Timers",o={id:"HF-Stats/StatsComponent/Shared-Timers",title:"Shared Timers",description:"Shared Timers (or StatsComponent Timers) are timers created inside a StatsComponent, allowing multiple objects to bind functions to them.",source:"@site/docs/01-HF-Stats/03-StatsComponent/06-Shared-Timers.md",sourceDirName:"01-HF-Stats/03-StatsComponent",slug:"/HF-Stats/StatsComponent/Shared-Timers",permalink:"/docs/HF-Stats/StatsComponent/Shared-Timers",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"hfstatsSidebar",previous:{title:"Level Stat",permalink:"/docs/HF-Stats/StatsComponent/Level-Stat"},next:{title:"Delegates",permalink:"/docs/HF-Stats/StatsComponent/Delegates"}},d={},l=[{value:"Create a Shared Timer",id:"create-a-shared-timer",level:2},{value:"Through the Details Panel",id:"through-the-details-panel",level:3},{value:"Dynamically",id:"dynamically",level:3},{value:"Use a Shared Timer",id:"use-a-shared-timer",level:2},{value:"Regeneration",id:"regeneration",level:3},{value:"Manual",id:"manual",level:3}];function h(e){const n={admonition:"admonition",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,r.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"shared-timers",children:"Shared Timers"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Shared Timers"})," (or ",(0,a.jsx)(n.strong,{children:"StatsComponent Timers"}),") are timers created inside a StatsComponent, allowing multiple objects to bind functions to them."]}),"\n",(0,a.jsx)(n.h2,{id:"create-a-shared-timer",children:"Create a Shared Timer"}),"\n",(0,a.jsx)(n.h3,{id:"through-the-details-panel",children:"Through the Details Panel"}),"\n",(0,a.jsxs)(n.p,{children:["In the ",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"Timers"})})," property of the StatsComponent, you can add an element to the TMap with an\r\n",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"Name"})})," and a ",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"Tick Rate"})}),"."]}),"\n",(0,a.jsx)("img",{src:"/img/doc/HF-Stats/StatsComponentSharedTimers.jpg"}),"\n",(0,a.jsx)(n.p,{children:"These Shared Timers are automatically created when the StatsComponent is initialized."}),"\n",(0,a.jsx)(n.h3,{id:"dynamically",children:"Dynamically"}),"\n",(0,a.jsxs)(n.p,{children:["You can also dynamically create and remove Shared Timers from your StatsComponent with ",(0,a.jsx)("span",{class:"function",children:"AddTimer()"})," and\r\n",(0,a.jsx)("span",{class:"function",children:"RemoveTimer()"}),"."]}),"\n",(0,a.jsx)("img",{src:"/img/doc/HF-Stats/AddRemoveSharedTimer.jpg"}),"\n",(0,a.jsx)(n.h2,{id:"use-a-shared-timer",children:"Use a Shared Timer"}),"\n",(0,a.jsx)(n.h3,{id:"regeneration",children:"Regeneration"}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.strong,{children:"Progress Stat"})," can have its Regeneration automatically bound to a Timer in its Details Panel through the\r\n",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"Regeneration Timer"})})," property."]}),"\n",(0,a.jsx)("img",{src:"/img/doc/HF-Stats/RegenerationTimerProperty.jpg"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Whenever the Regeneration is no longer active (when its value has reached the Maximum Value or when the Regeneration is manually paused),\r\nthe Progress Stat will automatically unbind from the Shared Timer. It will re-bind to it when it becomes active again (when its\r\nvalue falls below the Maximum Value or when Regeneration is manually unpaused)."})}),"\n",(0,a.jsx)(n.h3,{id:"manual",children:"Manual"}),"\n",(0,a.jsxs)(n.p,{children:["You can also manually bind or unbind a function from a Shared Timer with ",(0,a.jsx)("span",{class:"function",children:"BindTOTimer()"})," and\r\n",(0,a.jsx)("span",{class:"function",children:"UnbindFromTimer()"}),"."]}),"\n",(0,a.jsx)("img",{src:"/img/doc/HF-Stats/BindUnbindSharedTimer.jpg"}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["You can change the ",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.strong,{children:"Target Object"})})," to target a function from another object (e.g. a Stat)."]})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"When a Timer doesn't have any function bound to it, it will go to sleep, and wake up whenever a new function is bound."})})]})}function c(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>o,M:()=>s});var a=t(1504);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);